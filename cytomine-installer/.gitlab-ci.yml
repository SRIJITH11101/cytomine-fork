stages:
  - prepare
  - test
  - publish


variables:
  DOCKER_IMAGE_NAME: 'cytomine/installer'
  PYTHON_IMAGE_TAG: 3.12.4-slim-bookworm
  PYTHON_IMAGE_TAG_TESTONLY_3_11: 3.11.9-slim-bookworm
  PYTHON_IMAGE_TAG_TESTONLY_3_10: 3.10.9-slim-buster


include:
  - component: $CI_SERVER_FQDN/cm/rnd/cicd/component-python/linter@0.3.0
    inputs:
      targets: ./cytomine_installer ./tests
      pylintrc-path: pylintrc
      pylint-version:	3.2.5
      python-image-tag:	${PYTHON_IMAGE_TAG}
  - component: $CI_SERVER_FQDN/cm/rnd/cicd/component-python/unittest@0.3.0
    inputs:
      unittest-job-name: unittest-python-3.12
      target: ./tests
      python-image-tag:	${PYTHON_IMAGE_TAG}
  - component: $CI_SERVER_FQDN/cm/rnd/cicd/component-python/unittest@0.3.0
    inputs:
      unittest-job-name: unittest-python-3.11
      target: ./tests
      python-image-tag:	${PYTHON_IMAGE_TAG_TESTONLY_3_11}
  - component: $CI_SERVER_FQDN/cm/rnd/cicd/component-python/unittest@0.3.0
    inputs:
      unittest-job-name: unittest-python-3.10
      target: ./tests
      python-image-tag:	${PYTHON_IMAGE_TAG_TESTONLY_3_10}

default:
  tags:
    - docker


make-version-name:
  stage: prepare
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/bash:5.2.15-alpine3.16
  script:
    # The
    - | # If no tag has been pushed ($CI_COMMIT_TAG is empty), name it as the branch
      if [ -z $CI_COMMIT_TAG ]; then
        echo "IMAGE_VERSION=$CI_COMMIT_BRANCH" > .env
      else
        # Else use the tag
        echo "IMAGE_VERSION=$CI_COMMIT_TAG" > .env
      fi
    - cat .env
  artifacts:
    reports:
      dotenv: .env


.install-test-dependencies: &install-test-dependencies
  before_script:
    - python -m pip install -r requirements.txt

unittest-python-3.12:
  *install-test-dependencies

unittest-python-3.11:
  *install-test-dependencies

unittest-python-3.10:
  *install-test-dependencies


docker-image:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:latest
  needs:
    - job: make-version-name
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    # Use credential helper (see https://docs.docker.com/engine/reference/commandline/login/#credentials-store)
    - mkdir -p $HOME/.docker && echo $DOCKER_HUB_AUTH_CONFIG > $HOME/.docker/config.json
    - echo "Registry credentials configured at $HOME/.docker/config.json"

    - echo "Build the docker image ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION}"

    - |
      docker build \
        --build-arg IMAGE_VERSION=${IMAGE_VERSION} \
        --build-arg IMAGE_REVISION=${CI_COMMIT_SHORT_SHA} \
        --build-arg PYTHON_VERSION=${PYTHON_VERSION} \
        -f docker/Dockerfile \
        -t ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION} \
        -t ${DOCKER_IMAGE_NAME}:latest \
        .

    - echo "Pushing docker image ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION} and ${DOCKER_IMAGE_NAME}:latest"
    - docker push ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION}
    - docker push ${DOCKER_IMAGE_NAME}:latest
    - echo "Successfully pushed docker image ${DOCKER_IMAGE_NAME}:${IMAGE_VERSION} and ${DOCKER_IMAGE_NAME}:latest"

