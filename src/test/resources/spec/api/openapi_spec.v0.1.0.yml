openapi: 3.0.0
info:
  title: App Engine API
  version: 0.2.0
  description: App Engine API provides a set of requests to interact with tasks and apps.

security:
  - bearerAuth: []

servers:
  - url: http://localhost:8080/api/v1

paths:
  /tasks:
    post:
      summary: Upload and creates a task as a zip archive containing a 'descriptor.yml' file and related task files
      operationId: uploadTask
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                task:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful upload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_description"
        '400':
          description: The descriptor is malformed, e.g. not valid based on the schema, missing files or contains erroneous information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '409':
          description: Conflict, a task with the same namespace and version has already been registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

    get:
      summary: Get descriptions of all tasks available in App Engine
      operationId: getTasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/task_description'

  /tasks/{id}:
    get:
      summary: Get task description by UUID
      operationId: getTaskByUUID
      parameters: &task-uuid-only-parameters
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task
      responses: &get-task-description-responses
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_description'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /tasks/{namespace}/{version}:
    get:
      summary: Get task description by namespace and version
      operationId: getTaskByNamespaceVersion
      parameters: &task-ns-version-only-parameters
        - in: path
          name: namespace
          required: true
          schema:
            type: string
          description: The namespace of the task
        - in: path
          name: version
          required: true
          schema:
            type: string
          description: The version of the task
      responses: *get-task-description-responses

  /tasks/{id}/inputs:
    get:
      summary: List input parameters by task UUID
      operationId: getTaskInputsByUUID
      parameters: *task-uuid-only-parameters
      responses: &get-task-inputs-responses
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/input_parameter'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /tasks/{namespace}/{version}/inputs:
    get:
      summary: List input parameters by task namespace and version
      operationId: getTaskInputsByNamespaceVersion
      parameters: *task-ns-version-only-parameters
      responses: *get-task-inputs-responses

  /tasks/{id}/outputs:
    get:
      summary: List output parameters by task UUID
      operationId: getTaskOutputsByUUID
      parameters: *task-uuid-only-parameters
      responses: &get-task-outputs-responses
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/output_parameter'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /tasks/{namespace}/{version}/outputs:
    get:
      summary: List output parameters by task namespace and version
      operationId: getTaskOutputsByNamespaceVersion
      parameters: *task-ns-version-only-parameters
      responses: *get-task-outputs-responses

  /tasks/{id}/descriptor.yml:
    get:
      summary: Download task descriptor in YAML format
      operationId: getTaskDescriptorByUUID
      parameters: *task-uuid-only-parameters
      responses: &get-task-descriptor-responses
        '200':
          description: Successful response
          content:
            application/yaml:
              schema:
                type: string
                format: binary
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /tasks/{namespace}/{version}/descriptor.yml:
    get:
      summary: Download task descriptor in YAML format
      operationId: getTaskDescriptorByNamespaceVersion
      parameters: *task-ns-version-only-parameters
      responses: *get-task-descriptor-responses

  /tasks/{namespace}/{version}/runs:
    post:
      summary: creates a Task run
      operationId: createTaskRunByNamespaceVersion
      parameters: *task-ns-version-only-parameters
      responses: &post-task-run-responses
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /tasks/{task_id}/runs:
    post:
      summary: creates a Task run
      operationId: createTaskRunByUUID
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task
      responses: *post-task-run-responses

  /task-runs/{run_id}/input-provisions/{param_name}:
    put:
      summary: Single input parameter provisioning
      operationId: provisionTaskRunSingleParameter
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
        - in: path
          name: param_name
          required: true
          schema:
            $ref: "#/components/schemas/param_name_type"
          description: name of the parameter
      requestBody:
        description: parameters to provision and their primitive (or collection of primitive) values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_run_input_provision_input_body'
      responses:
        '200':
          description: Successful provisioning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_input_provision'
        '400':
          description: Provisioning error, validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_input_provision_error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /task-runs/{run_id}/input-provisions:
    put:
      summary: Batch provisioning of input parameters (for primitive and collection of primitives only)
      operationId: provisionTaskRunParameterBatch
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      requestBody:
        description: parameters to provision and their primitive (or collection of primitive) values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_run_batch_input_provision_input_body'
      responses:
        '200':
          description: Successful provisioning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_batch_input_provision'
        '400':
          description: Provisioning error, validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_batch_input_provision_error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /task-runs/{run_id}:
    get:
      summary: Get information about a task run
      operationId: getTaskRun
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      responses:
        '200':
          description: returns the task run description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_run"
        '404':
          description: task run not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generic_error"

  /task-runs/{run_id}/state-actions:
    post:
      summary: Request a state change for a task run
      operationId: performStateActionAgainstTaskRun
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      requestBody:
        description: state change description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_run_state_action'
      responses:
        '200':
          description: Acknowledged/accepted state action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_run_state_action_success"
        '403':
          description: Cannot apply state action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_state_action_error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /task-runs/{run_id}/inputs.zip:
    get:
      summary: Download inputs of a task
      operationId: getTaskRunInputsInArchive
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      responses:
        '200':
          description: a zip file containing the input files for the task run
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /task-runs/{run_id}/outputs.zip:
    get:
      summary: Get all the outputs as files in a zip
      operationId: getTaskRunOutputsInArchive
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '400':
          description: cannot parse/read zip file, task run not in a valid state for returning the zip file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '200':
          description: valid zip file with output data (request should not fail if data is invalid)
          content:
            application/zip:
              schema:
                type: string
                format: binary
    post:
      summary: Upload outputs of a task
      operationId: uploadTaskRunOutputs
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - outputs
              properties:
                outputs:
                  type: string
                  format: binary
      responses:
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '400':
          description: cannot parse/read zip file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '200':
          description: a list of task run outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_outputs'

  /task-runs/{run_id}/outputs:
    get:
      summary: Get task run outputs
      operationId: getTaskRunOutputs
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      responses:
        '200':
          description: valid zip file with output data (request should not fail if data is invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_outputs'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'
        '403':
          description: can not fetch outputs of unfinished task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error'

  /task-runs/{run_id}/inputs:
    get:
      summary: Get task run inputs
      operationId: getTaskRunInputs
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            type: string
            format: uuid
          description: The UUID of the task run
      responses:
        '200':
          description: valid zip file with output data (request should not fail if data is invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_run_inputs'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    contact:
      type: object
      properties:
        first_name:
          type: string
          description: First name
        last_name:
          type: string
          description: Last name
        organization:
          type: string
          description: This person's organization
        email:
          type: string
          description: Email address
        is_contact:
          type: boolean
          description: This person is the contact person

    task_description:
      type: object
      required:
        - name
        - namespace
        - version
        - description
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Task name
        namespace:
          type: string
          description: Task namespace
        version:
          type: string
          description: Task version
        description:
          type: string
          description: Task description
        authors:
          type: array
          description: List of the task authors
          items:
            $ref: "#/components/schemas/contact"

    param_type_identifier:
      type: string
      enum:
        - integer
        - boolean

    base_parameter:
      type: object
      required:
        - description
        - display_name
        - optional
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
          description: Parameter App Engine UUID
        name:
          $ref: "#/components/schemas/param_name_type"
        display_name:
          description: Human-readable name for the parameter
          type: "string"
        description:
          description: Human-readable text description of the parameter
          type: string

    type_spec_integer:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          enum: ["integer"]
        gt:
          type: "integer"
          description: 'input constraint to enforce: input > $gt'
        lt:
          type: "integer"
          description: 'input constraint to enforce: input < $lt'
        geq:
          type: "integer"
          description: 'input constraint to enforce: input >= $geq'
        leq:
          type: "integer"
          description: 'input constraint to enforce: input <= $leq'

    type_spec_boolean:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          enum: ["boolean"]

    typed_parameter_integer:
      allOf:
        - $ref: "#/components/schemas/base_parameter"
        - type: object
          required:
            - type
          properties:
            type:
              $ref: "#/components/schemas/type_spec_integer"

    typed_parameter_boolean:
      allOf:
        - $ref: "#/components/schemas/base_parameter"
        - type: object
          required:
            - type
          properties:
            type:
              $ref: "#/components/schemas/type_spec_boolean"

    input_parameter:
      type: object
      allOf:
        - oneOf:
            - allOf:
              - $ref: "#/components/schemas/typed_parameter_integer"
              - type: object
                properties:
                  default:
                    description: Default integer value. If omitted, no default value
                    type: integer
        - oneOf:
            - allOf:
              - $ref: "#/components/schemas/typed_parameter_boolean"
              - type: object
                properties:
                  default:
                    description: Default boolean value. If omitted, no default value
                    type: boolean
      properties:
        optional:
          description: Whether or not the parameter is optional
          type: boolean

    output_parameter:
      oneOf:
        - $ref: "#/components/schemas/typed_parameter_integer"
        - $ref: "#/components/schemas/typed_parameter_boolean"

    task_run_state:
      type: string
      enum:
        - CREATED      # created but not all inputs provisioned
        - PROVISIONED  # ready to be executed, all inputs have been provisioned
        - QUEUING      # submitting the task to the execution environment
        - QUEUED       # evaluated successfully by execution environment
        - PENDING      # pending execution on the execution environment
        - RUNNING      # task running in the execution environment
        - FAILED       # an error occurred and stopped the process of executing the task (terminal state)
        - FINISHED     # task successfully executed and outputs available (terminal state)

    task_run:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/task_description"
        id:
          type: string
          format: uuid
          description: Parameter App Engine task run UUID
        state:
          $ref: "#/components/schemas/task_run_state"
        created_at:
          description: Creation datetime for the task run
          type: string
          format: date-time
        updated_at:
          description: Last update datetime for the task run
          type: string
          format: date-time
        last_state_transition_at:
          description: Last task run state transaction datetime
          type: string
          format: date-time

    param_name_type:
      type: string
      pattern: ^[a-zA-Z0-9_]+$
      description: a parameter name

    task_run_id_type:
      type: string
      format: uuid
      description: identifier of the associated task run

    task_run_input_provision:
      allOf:
        - $ref: "#/components/schemas/task_run_input_provision_input_body"
        - type: object
          properties:
            task_run_id:
              $ref: "#/components/schemas/task_run_id_type"

    task_run_input_provision_error_details:
      type: object
      properties:
        param_name:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
          description: parameter name maps the explanation of the error for this parameter as text description
        description:
          type: string
          description: description of the error associated with this parameter

    task_run_input_provision_error:
      allOf:
        - $ref: "#/components/schemas/generic_error"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/task_run_input_provision_error_details"

    task_run_input_provision_input_body:
      type: object
      required: ['param_name', 'value']
      properties:
        value:
          oneOf:
            - type: integer
            - type: boolean
        param_name:
          $ref: "#/components/schemas/param_name_type"

    task_run_batch_input_provision_input_body:
      type: array
      items:
        $ref: "#/components/schemas/task_run_input_provision_input_body"

    task_run_batch_input_provision:
      type: array
      items:
        $ref: "#/components/schemas/task_run_input_provision"

    task_run_batch_input_provision_error:
      allOf:
        - $ref: "#/components/schemas/generic_batch_error"
        - type: object
          properties:
            details:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      details:
                        $ref: "#/components/schemas/task_run_input_provision_error_details"

    generic_error:
      type: object
      properties:
        error_code:
          type: string
          pattern: ^APPE-[a-zA-Z0-9_-]+$
          description: an error code structured as `{component}-{reason}`
        message:
          type: string
          description: the human-readable error message associated with the error_code (non-localized, in english)
        details:
          type: object
          description: provide a more detailed description of the error, structure and content depends on the error code

    generic_batch_error:
      allOf:
        - $ref: "#/components/schemas/generic_error"
        - type: object
          properties:
            details:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    $ref: "#/components/schemas/generic_error"

    generic_state_action:
      type: object
      properties:
        desired:
          description: name of the desired state
          type: string

    task_run_state_action:
      allOf:
        - $ref: "#/components/schemas/generic_state_action"
        - type: object
          properties:
            desired:
              oneOf:
                - type: string
                  enum: ["running"]

    generic_state_action_success:
      type: object
      properties:
        status:
          type: string
          enum: ["success"]
        resource:
          type: object

    task_run_state_action_success:
      allOf:
        - $ref: "#/components/schemas/generic_state_action_success"
        - type: object
          properties:
            resource:
              $ref: "#/components/schemas/task_run"

    task_run_state_action_error:
      allOf:
        - $ref: "#/components/schemas/generic_error"
        - type: object
          properties:
            details:
              type: object
              properties:
                resource:
                  $ref: "#/components/schemas/task_run"

    base_task_run_parameter:
      type: object
      required: [ "param_name", "task_run_id" ]
      properties:
        param_name:
          $ref: "#/components/schemas/param_name_type"
        task_run_id:
          $ref: "#/components/schemas/task_run_id_type"

    typed_task_run_parameter:
      allOf:
        - $ref: "#/components/schemas/base_task_run_parameter"
        - oneOf:
            - $ref: "#/components/schemas/integer_task_run_parameter"
            - $ref: "#/components/schemas/boolean_task_run_parameter"

    integer_task_run_parameter:
      type: object
      required: ["value", "type"]
      properties:
        type:
          type: string
          enum: ["integer"]
        value:
          type: integer

    boolean_task_run_parameter:
      type: object
      required: ["value", "type"]
      properties:
        type:
          type: string
          enum: ["boolean"]
        value:
          type: boolean

    task_run_output:
      $ref: "#/components/schemas/typed_task_run_parameter"

    task_run_input:
      $ref: "#/components/schemas/typed_task_run_parameter"

    task_run_outputs:
      type: array
      items:
        $ref: "#/components/schemas/task_run_output"

    task_run_inputs:
      type: array
      items:
        $ref: "#/components/schemas/task_run_input"