plugins {
    id 'java-library'
    id 'io.freefair.lombok' version '6.6.1'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.ya-b'
version '0.1.2'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.jodah:expiringmap:0.5.10'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.apache.commons:commons-compress:1.22'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    testImplementation 'ch.qos.logback:logback-classic:1.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
    filter {
        excludeTestsMatching 'io.github.ya_b.registry.client.RegistryClientTest.registryPullPush'
        excludeTestsMatching 'io.github.ya_b.registry.client.RegistryClientTest.registryCopy'
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.name
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'registry-client'
                description = 'A java client for docker registry api v2'
                url = 'https://github.com/ya-b/registry-client.git'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ya-b'
                        name = 'yangbo'
                        email = 'ya-b@outlook.com'
                    }
                }
                scm {
                    url = 'https://github.com/ya-b/registry-client.git'
                    connection = 'scm:git:https://github.com/ya-b/registry-client.git'
                    developerConnection = 'scm:git:https://github.com/ya-b/registry-client.git'
                }
            }

        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("SONATYPE_USERNAME")
                password System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
    signing {
        sign publishing.publications.mavenJava
    }
    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
        options.encoding = "UTF-8"
        failOnError = false
    }
}