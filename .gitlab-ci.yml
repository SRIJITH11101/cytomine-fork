stages:
- prepare
- test
- build


variables:
  # docker images for test services
  TESTS_IMAGE_REGISTRY: 'registry:2.8.3'
  TESTS_IMAGE_POSTGIS: 'cytomine/postgis:1.4.0-dev.2'


default:
  tags:
    - docker


lint-dockerfiles:
  stage: prepare
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/hadolint/hadolint:latest-alpine
  # Uncomment to silent some warnings if needed
  #variables:
  #  HADOLINT_OPT: --ignore DL3008
  script:
    - hadolint ${HADOLINT_OPT} docker/Dockerfile
  rules:
    - changes:
        - docker/Dockerfile
      when: always
    # If the Dockerfile has not been changed, this job can be skipped
    - when: never
      allow_failure: true


make-version-name:
  stage: prepare
  # regex check does not work with /bin/sh because of parenthesis so we need /bin/bash here
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/bash:5.2.15-alpine3.16
  script:
    # TODO: reuse the tag regexp common job/rule
    - | # If no tag has been pushed ($CI_COMMIT_TAG is empty), name it as SNAPSHOT
      if [ -z ${CI_COMMIT_TAG} ]; then
        echo "CM_VERSION=${CI_COMMIT_BRANCH}" > .env
      else
        # Else use the tag
        echo "CM_VERSION=${CI_COMMIT_TAG}" > .env
      fi
    - cat .env
  artifacts:
    reports:
      dotenv: .env


tests-storage-registry:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/gradle:8.4-jdk17-alpine
  services:
    - alias: postgres
      name: $TESTS_IMAGE_POSTGIS
    - alias: registry
      name: $TESTS_IMAGE_REGISTRY
    # TODO
    # - alias: registry
    #   name: $TESTS_IMAGE_REGISTRY
  variables:
    # postgres db
    POSTGRES_DB: docker
    POSTGRES_HOST_AUTH_METHOD: trust
    POSTGRES_PASSWORD: password
    POSTGRES_PORT: 5432
    POSTGRES_USER: docker
    APPENGINE_DB: appengine
    APPENGINE_USER: appengine
    APPENGINE_PASSWORD: password
    # registry
    REGISTRY_STORAGE_DELETE_ENABLED: 'true'
    REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: '/data'
    # app engine config
    DB_HOST: postgres
    DB_NAME: appengine
    DB_USERNAME: appengine
    DB_PASSWORD: password
  script:
    - gradle :test --no-daemon --scan --stacktrace -w
  artifacts:
    when: always
    reports:
      junit: build/test-results/**/TEST-*.xml
      # TODO integrate code coverage
    paths:
      - build/reports/tests/cucumber/*.html


build-push-docker-image:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:latest
  variables:
    OPENJDK_VERSION: 17-slim-bullseye
    GRADLE_VERSION: 8.5.0-jdk17-alpine
    ENTRYPOINT_SCRIPTS_VERSION: 1.3.2
    DOCKER_IMAGE_NAME: cytomine/app-engine
  rules:
    # - if: $CI_COMMIT_TAG
    - when: never  # disable waiting for actual OS release
  script:
    # Use credential helper (see https://docs.docker.com/engine/reference/commandline/login/#credentials-store)
    - mkdir -p $HOME/.docker && echo $DOCKER_HUB_AUTH_CONFIG > $HOME/.docker/config.json
    - echo "Registry credentials configured at $HOME/.docker/config.json"

    - echo "Build the docker image ${DOCKER_IMAGE_NAME}:${CM_VERSION}"
    - |
      docker build \
        --build-arg APP_ENGINE_VERSION=${CM_VERSION} \
        --build-arg APP_ENGINE_REVISION=${CI_COMMIT_SHORT_SHA} \
        --build-arg ENTRYPOINT_SCRIPTS_VERSION=${ENTRYPOINT_SCRIPTS_VERSION} \
        --build-arg GRADLE_VERSION=${GRADLE_VERSION} \
        --build-arg OPENJDK_VERSION=${OPENJDK_VERSION} \
        -t ${DOCKER_IMAGE_NAME}:${CM_VERSION} \
        -f docker/Dockerfile \
        .

    - echo "Pushing docker image ${DOCKER_IMAGE_NAME}:${CM_VERSION}"
    - docker push ${DOCKER_IMAGE_NAME}:${CM_VERSION}
    - echo "Successfully pushed docker image ${DOCKER_IMAGE_NAME}:${CM_VERSION}"
