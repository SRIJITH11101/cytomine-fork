stages:
  - prepare
  - test
  - build
  - publish

default:
  tags:
    - docker
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

make-version-name:
  stage: prepare
  # regex check does not work with /bin/sh because of parenthesis so we need /bin/bash here
  image: bash:5.2.15-alpine3.16
  script:
    - if [[ "$CI_COMMIT_REF_NAME" =~ ^refs/tags/ ]] then
        echo "PACKAGE_VERSION=$CI_COMMIT_TAG" > .env;
      else
        echo "PACKAGE_VERSION=$CI_COMMIT_SHORT_SHA-$(date '+%Y%m%d%H%M%S')-SNAPSHOT" > .env;
      fi
    - cat .env
  artifacts:
    reports:
      dotenv: .env

# TODO tests require a full cytomine instance to run, skip for now
# Jenkins tests used to run against a full cytomine but with with fixed versions of components so it was not ideal
# run-tests:
#   stage: test

build-js-package:
  image: node:14.16.1
  stage: build
  needs:
    - job: make-version-name
      artifacts: true
  script:
    - "sed -i -- 's/\"version\": \"0.0.0\"/\"version\": \"$PACKAGE_VERSION\"/g' package.json"
    - npm ci --cache .npm --prefer-offline
    - npm run build
  artifacts:
    paths:
      - dist

# TODO upload to npm public packaget registry 
publish-js-package:
  image: node:14.16.1
  stage: publish
  needs:
    - job: build-js-package
      artifacts: true
  script:
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}"
      } | tee -a .npmrc
    - npm publish
